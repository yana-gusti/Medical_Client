/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Pages;

import static Pages.ProfilePage.journalPage;
import static Pages.SampleJTable.buildTableModel;
import static Pages.SignInPage.profilePage;
import Pages.journals.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import services.DBConnection;
import services.Patient;
import services.PatientServices;
import static services.PatientServices.findPatient;
import services.UserServices;

/**
 *
 * @author iRoma
 */
public class JournalPage extends javax.swing.JFrame {
    public static SignOutPage signOutPage;
    public static AddmissionPage addmissionPage;
    public static CallPage callPage;
    public static DispensaryPage dispensaryPage;
    public static HospitalHomePage hospitalHomePage;
    public static InfectionsPage infectionsPage;
    public static RefusedPage refusedPage;
    public static VaccinationPage vactinationPage;
    /**
     * Creates new form LoginPage
     */
    public JournalPage() {
        initComponents();
    }
   public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();
// names of columns

        Vector<String> columnNames = new Vector<String>();

        int columnCount = metaData.getColumnCount();

       

            columnNames.add( "№");
            columnNames.add( "Ім'я");
            columnNames.add( "Прізвище");
            columnNames.add( "Дата народження");
            columnNames.add( "Адреса");
            columnNames.add( "Місце роботи/навчання");
            columnNames.add( "Діагноз/Щеплення");

        
        // data of the table

        Vector<Vector<Object>> data = new Vector<Vector<Object>>();

        while (rs.next()) {

            Vector<Object> vector = new Vector<Object>();

            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {

                vector.add(rs.getObject(columnIndex));

            }

            data.add(vector);

        }
        return new DefaultTableModel(data, columnNames);

 

    }   

    public void refreshTable(String sql){
        String url = "jdbc:mysql://localhost:3306/medical_client";
        String userid = "root";
        String password = "yana246897531";
         try (Connection connection = DriverManager.getConnection( url, userid, password );
             Statement stmt = connection.createStatement();
             ResultSet rs = stmt.executeQuery( sql ))
        {
        patientTable.setModel(buildTableModel(rs));
        }
        catch (SQLException e)
        {
            System.out.println( e.getMessage() );
        }
    }
    public void UpdateTable(String sql){


        ArrayList columnNames = new ArrayList();
        ArrayList data = new ArrayList();

        //  Connect to an MySQL Database, run query, get result set
        String url = "jdbc:mysql://localhost:3306/medical_client";
        String userid = "root";
        String password = "yana246897531";
  
        try (Connection connection = DriverManager.getConnection( url, userid, password );
             Statement stmt = connection.createStatement();
             ResultSet rs = stmt.executeQuery( sql ))
        {
             patientTable = new JTable(buildTableModel(rs))

        {
            public Class getColumnClass(int column)
            {
                for (int row = 0; row < getRowCount(); row++)
                {
                    Object o = getValueAt(row, column);

                    if (o != null)
                    {
                        return o.getClass();
                    }
                }

                return Object.class;
            }
        };

        }
        catch (SQLException e)
        {
            System.out.println( e.getMessage() );
        }

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        TopPanel = new javax.swing.JPanel();
        vaccinationBtn = new javax.swing.JButton();
        callBtn = new javax.swing.JButton();
        addmissionBtn = new javax.swing.JButton();
        dispensaryBtn = new javax.swing.JButton();
        infectionsBtn = new javax.swing.JButton();
        refusedBtn = new javax.swing.JButton();
        homeHospitalBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        searchTA = new javax.swing.JTextField();
        selectPatient = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        deleteTA = new javax.swing.JTextField();
        deleteBtn = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        String sql = "SELECT id, first_name, last_name, birthday, address, `work`, "
                + "diagnoz from patienttable WHERE diagnoz is not null and user_name like '"+SignInPage.user.getE_mail()+"'";

        UpdateTable(sql);
        jScrollPane3.setViewportView(patientTable);




        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPanel.setBackground(new java.awt.Color(204, 255, 204));

        TopPanel.setBackground(new java.awt.Color(153, 255, 153));

        vaccinationBtn.setText("Щеплення");
        vaccinationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccinationBtnActionPerformed(evt);
            }
        });

        callBtn.setText("Виклики");
        callBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callBtnActionPerformed(evt);
            }
        });

        addmissionBtn.setText("Прийом");
        addmissionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addmissionBtnActionPerformed(evt);
            }
        });

        dispensaryBtn.setText("Диспансер");
        dispensaryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispensaryBtnActionPerformed(evt);
            }
        });

        infectionsBtn.setText("Інфекції");
        infectionsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infectionsBtnActionPerformed(evt);
            }
        });

        refusedBtn.setText("Відмови");
        refusedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refusedBtnActionPerformed(evt);
            }
        });

        homeHospitalBtn.setText("Стац./Вдома");
        homeHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeHospitalBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Повернутися");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        searchBtn.setText("Пошук пацієнта");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchTA.setForeground(new java.awt.Color(153, 153, 153));
        searchTA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTAMouseClicked(evt);
            }
        });
        searchTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTAActionPerformed(evt);
            }
        });

        selectPatient.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Показати всіх", "Пошук по прізвищу пацієнта", "Пошук по діагнозу пацієнта", "Пошук по типу щеплення " }));
        selectPatient.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectPatientItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout TopPanelLayout = new javax.swing.GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(vaccinationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(TopPanelLayout.createSequentialGroup()
                        .addComponent(infectionsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(dispensaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(selectPatient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TopPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addmissionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(callBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homeHospitalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refusedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TopPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(searchTA, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vaccinationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infectionsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dispensaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addmissionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(callBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeHospitalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refusedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTA, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/65.png"))); // NOI18N

        deleteTA.setForeground(new java.awt.Color(153, 153, 153));
        deleteTA.setText("Введіть прізвище пацієнта");
        deleteTA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteTAMouseClicked(evt);
            }
        });

        deleteBtn.setText("Видалити пацієнта");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(51, 102, 0));
        jLabel2.setFont(new java.awt.Font("Arial", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("АРМ Сімейного Лікаря");




        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteTA, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(62, 62, 62)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(TopPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteTA, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        String lastName=deleteTA.getText();
        Patient patient=null;
        System.out.println("ssss");
        if (lastName!=null){
            patient=PatientServices.findPatient(lastName);
            System.out.println("sssd");
            if (patient !=null){
                System.out.println("sss");
                DBConnection.deletePatient(patient);
                errorLabel.setText("Пацієнт був видалений");
               
                String sql = "SELECT id, first_name, last_name, birthday, address, `work`, "
                + "diagnoz from patienttable WHERE diagnoz is not null and user_name like '"+SignInPage.user.getE_mail()+"'";
                refreshTable(sql);
                

            } else {
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void deleteTAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteTAMouseClicked
        deleteTA.setText("");
    }//GEN-LAST:event_deleteTAMouseClicked

    private void selectPatientItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectPatientItemStateChanged
        if(selectPatient.getSelectedItem().equals("Пошук по прізвищу пацієнта")){
            searchTA.setText("Введіть прізвище пацієнта");
        }
        if(selectPatient.getSelectedItem().equals("Пошук по діагнозу пацієнта")){
            searchTA.setText("Введіть діагноз пацієнта");
        }
        if(selectPatient.getSelectedItem().equals("Пошук по типу щеплення")){
            searchTA.setText("Введіть тип щеплення");
        }
    }//GEN-LAST:event_selectPatientItemStateChanged

    private void searchTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTAActionPerformed

    private void searchTAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTAMouseClicked
        searchTA.setText("");
    }//GEN-LAST:event_searchTAMouseClicked

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed

        if(selectPatient.getSelectedItem().equals("Показати всіх")){
            
            
             String sql = "SELECT id, first_name, last_name, birthday, address, `work`, "
                + "diagnoz from patienttable WHERE diagnozis not null and user_name like '"+SignInPage.user.getE_mail()+"'";
            
             refreshTable(sql);
        }
        if(selectPatient.getSelectedItem().equals("Пошук по прізвищу пацієнта")){
            
            String search = searchTA.getText();
             String sql = "SELECT id, first_name, last_name, birthday, address, `work`, "
                + "diagnoz from patienttable WHERE last_name like '"+search+"' and user_name like '"+SignInPage.user.getE_mail()+"'";
            
             refreshTable(sql);
        }
        if(selectPatient.getSelectedItem().equals("Пошук по діагнозу пацієнта")){
            String search = searchTA.getText();
            String sql = "SELECT id, first_name, last_name, birthday, address, `work`, "
                + "diagnoz from patienttable WHERE diagnoz like '"+search+"' and user_name like '"+SignInPage.user.getE_mail()+"'";
            
           refreshTable(sql);
        }
        if(selectPatient.getSelectedItem().equals("Пошук по типу щеплення")){
            String search = searchTA.getText();
            String sql = "SELECT id, first_name, last_name, birthday, address, `work`, "
                + "diagnoz from patienttable WHERE vactination like '"+search+"' and user_name like '"+SignInPage.user.getE_mail()+"'";
              
            refreshTable(sql);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        journalPage.setVisible(false);
        profilePage.setVisible(true);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void homeHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeHospitalBtnActionPerformed
        hospitalHomePage = new HospitalHomePage();
        hospitalHomePage.setVisible(true);
        journalPage.setVisible(false);
    }//GEN-LAST:event_homeHospitalBtnActionPerformed

    private void refusedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refusedBtnActionPerformed
        refusedPage = new RefusedPage();
        refusedPage.setVisible(true);
        journalPage.setVisible(false);
    }//GEN-LAST:event_refusedBtnActionPerformed

    private void infectionsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infectionsBtnActionPerformed
        infectionsPage = new InfectionsPage();
        infectionsPage.setVisible(true);
        journalPage.setVisible(false);
    }//GEN-LAST:event_infectionsBtnActionPerformed

    private void dispensaryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispensaryBtnActionPerformed
        dispensaryPage = new DispensaryPage();
        dispensaryPage.setVisible(true);
        journalPage.setVisible(false);
    }//GEN-LAST:event_dispensaryBtnActionPerformed

    private void addmissionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addmissionBtnActionPerformed
        addmissionPage = new AddmissionPage();
        addmissionPage.setVisible(true);
        journalPage.setVisible(false);
    }//GEN-LAST:event_addmissionBtnActionPerformed

    private void callBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callBtnActionPerformed
        callPage = new CallPage();
        callPage.setVisible(true);
        journalPage.setVisible(false);
    }//GEN-LAST:event_callBtnActionPerformed

    private void vaccinationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccinationBtnActionPerformed
        vactinationPage = new VaccinationPage();
        vactinationPage.setVisible(true);
        journalPage.setVisible(false);
    }//GEN-LAST:event_vaccinationBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JournalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JournalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JournalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JournalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JournalPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    public javax.swing.JPanel TopPanel;
    public javax.swing.JButton addmissionBtn;
    public javax.swing.JButton callBtn;
    public javax.swing.JButton cancelBtn;
    public javax.swing.JButton deleteBtn;
    public javax.swing.JTextField deleteTA;
    public javax.swing.JButton dispensaryBtn;
    public javax.swing.JLabel errorLabel;
    public javax.swing.JButton homeHospitalBtn;
    public javax.swing.JButton infectionsBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable patientTable;
    public javax.swing.JButton refusedBtn;
    public javax.swing.JButton searchBtn;
    public javax.swing.JTextField searchTA;
    public javax.swing.JComboBox selectPatient;
    public javax.swing.JButton vaccinationBtn;
    // End of variables declaration//GEN-END:variables
}
